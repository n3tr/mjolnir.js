{"version":3,"sources":["webpack:///./node_modules/ocular-gatsby/src/templates/doc-page-markdown.jsx"],"names":["query","html","props","relativeLinks","href","hrefWithoutLeadingSlash","DocTemplate","replaceLinks","render","__html","React","Component"],"mappings":";;;;;;;;;;;;;;;2KAIA;AACA;AACO,GAAMA,MAAK,CAAX,aAgBP,4BAA6B,IACpBC,KADoB,CACZC,KAAK,CAALA,KADY,SACZA,CADY,QAEpBC,cAFoB,CAEHD,KAAK,CAFF,WAEHA,CAFG,cAI3B,MAAO,KAAI,CAAJ,0BAAgC,mBAAgB,CACrD;AACA,GAAIE,IAAI,CAAJA,oBAA2BA,IAAI,CAAJA,WAA/B,GAA+BA,CAA/B,CAAqD,CACnD;AACA,YACD,CACD,GAAMC,wBAAuB,CAAGD,IAAI,CAAJA,gBAAuBA,IAAI,CAAJA,MAAvBA,CAAuBA,CAAvBA,CANqB,IAMrD,CACA;AACA;AACA;AACA;AACA,gBAAgBD,aAAa,CAA7B,uBAA6B,CAA7B,MAXF,CAAO,CAAP,CAaD,C,GAEoBG,Y,sFACnB,2BAAmB,WACjB,8CACA,YAAa,CAACL,IAAI,CAAEM,YAAY,OAAnB,CAAb,CAFiB,aAGlB,C,wCAEDC,M,CAAAA,iBAAS,IACAP,KADA,CACQ,KADR,KACQ,CADR,KAEP,MACE,uEACE,kEACE,SAAS,CADX,gBAEE,uBAAuB,CAAE,CAACQ,MAAM,CAAER,IAAT,CAF3B,EADF,CADF,C,uBARqCS,4CAAK,CAACC,S","file":"component---node-modules-ocular-gatsby-src-templates-doc-page-markdown-jsx-b26bff56c924dd1f0693.js","sourcesContent":["import React from 'react';\n\nimport {graphql} from 'gatsby';\n\n// Query for the markdown doc by slug\n// (Note: We could just search the allMarkdown from WebsiteConfig ourselves)\nexport const query = graphql`\n  query DocBySlug($slug: String!) {\n    docBySlug: markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        category\n        tags\n      }\n    }\n  }\n`;\n\nfunction replaceLinks(props) {\n  const {html} = props.data.docBySlug;\n  const {relativeLinks} = props.pageContext;\n\n  return html.replace(/href=\"([^\"]+)\"/g, (link, href) => {\n    // don't rewrite external links, don't rewrite links to anchors\n    if (href.startsWith('http') || href.startsWith('#')) {\n      // TODO - we could style them differently though\n      return link;\n    }\n    const hrefWithoutLeadingSlash = href.startsWith('/') ? href.slice(1) : href;\n    // replace links to:\n    // - known physical files, either relative to this file or relative to root\n    // - known routes, either relative to the route of this page or to the home page\n    // by a link to their corresponding route, expresed relative to the home page\n    return `href=\"${relativeLinks[hrefWithoutLeadingSlash]}\"`;\n  });\n}\n\nexport default class DocTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {html: replaceLinks(props)};\n  }\n\n  render() {\n    const {html} = this.state;\n    return (\n      <div>\n        <div\n          className=\"markdown-body\"\n          dangerouslySetInnerHTML={{__html: html}}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}