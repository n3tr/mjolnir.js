{"data":{"docBySlug":{"html":"<h1 id=\"eventmanager\"><a href=\"#eventmanager\" aria-label=\"eventmanager permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EventManager</h1>\n<p>Provides a unified API for subscribing to events about both basic input events (e.g. 'mousemove', 'touchstart', 'wheel') and gestural input (e.g. 'click', 'tap', 'panstart').</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import EventManager from &#39;mjolnir.js&#39;;\n\nconst eventManager = new EventManager(domElement);\nfunction onClick (event) {}\nfunction onPointerMove (event) {}\n\neventManager.on({\n  click: onClick,\n  pointermove: onPointerMove\n});\n\n// ...\neventManager.destroy();</code></pre></div>\n<p><strong>Note:</strong> While EventManager supports mouse and touch events, we recommend the use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\">Pointer Events</a> when possible for the broadest input device compatibility.</p>\n<h2 id=\"methods\"><a href=\"#methods\" aria-label=\"methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"constructor\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h3>\n<p>Creates a new <code class=\"language-text\">EventManager</code> instance.</p>\n<p><code class=\"language-text\">new EventManager(element, {events, recognizers})</code></p>\n<ul>\n<li><code class=\"language-text\">element</code> {DOM Element, optional} - DOM element on which event handlers will be registered. Default <code class=\"language-text\">null</code>.</li>\n<li><code class=\"language-text\">options</code> {Object, optional} -  Options</li>\n<li><code class=\"language-text\">options.events</code> {Object} -  Map of {event name: handler} to register on init.</li>\n<li><code class=\"language-text\">options.recognizers</code> - {Object}  Gesture recognizers from Hammer.js to register, as an Array in <a href=\"http://hammerjs.github.io/api/#hammermanager\">Hammer.Recognizer format</a>. If not provided, a default set of recognizers will be used. See \"Gesture Events\" section below for more details.</li>\n<li><code class=\"language-text\">options.recognizerOptions</code> - {Object}  Override the default options of <code class=\"language-text\">recognizers</code>. Keys are recognizer names and values are recognizer options. For a list of default recognizers, see \"Gesture Events\" section below.</li>\n<li><code class=\"language-text\">options.rightButton</code> - {Boolean}  Recognizes click and drag from pressing the right mouse button. Default <code class=\"language-text\">false</code>. If turned on, the context menu will be disabled.</li>\n<li><code class=\"language-text\">options.touchAction</code> - {String}  Allow browser default touch actions. Default <code class=\"language-text\">none</code>. See <a href=\"http://hammerjs.github.io/touch-action/\">hammer.js doc</a>.</li>\n<li><code class=\"language-text\">options.legacyBlockScroll</code> - {Boolean}  Blocks default page scroll behavior on wheel events. Default <code class=\"language-text\">true</code>. Set to <code class=\"language-text\">false</code> to enable scrolling. This option is for backward compatibility and will be removed in the next major release.</li>\n</ul>\n<h3 id=\"destroy\"><a href=\"#destroy\" aria-label=\"destroy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>destroy</h3>\n<p>Tears down internal event management implementations.</p>\n<p><code class=\"language-text\">eventManager.destroy()</code></p>\n<p>Note: It is important to call <code class=\"language-text\">destroy</code> when done since <code class=\"language-text\">EventManager</code> adds event listeners to <code class=\"language-text\">window</code>.</p>\n<h3 id=\"setelement\"><a href=\"#setelement\" aria-label=\"setelement permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setElement</h3>\n<p>Set the DOM element on which event handlers will be registered. If element has been set, events will be unregistered from the previous element.</p>\n<p><code class=\"language-text\">eventManager.setElement(element)</code></p>\n<ul>\n<li><code class=\"language-text\">element</code> {DOM Element, optional} - DOM element on which event handlers will be registered.</li>\n</ul>\n<h3 id=\"on\"><a href=\"#on\" aria-label=\"on permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>on</h3>\n<p>Register an event handler function to be called on <code class=\"language-text\">event</code>.</p>\n<p><code class=\"language-text\">eventManager.on(event, handler, srcElement)</code></p>\n<ul>\n<li><code class=\"language-text\">event</code> {string|Object} - An event name (<code class=\"language-text\">String</code>) or map of event names to handlers.</li>\n<li><code class=\"language-text\">[handler]</code> {Function} - The function to be called on <code class=\"language-text\">event</code>.</li>\n<li><code class=\"language-text\">[srcElement]</code> {Node} - The source element of this event. If provided, only events that are targeting this element or its decendants will invoke the handler. If ignored, default to the whole document. Events are propagated up the DOM tree.</li>\n</ul>\n<p>** Note: Unlike the DOM event system, developers are responsible of deregistering event handlers when <code class=\"language-text\">srcElement</code> is removed. **</p>\n<h3 id=\"off\"><a href=\"#off\" aria-label=\"off permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>off</h3>\n<ul>\n<li>Deregister a previously-registered event handler.</li>\n</ul>\n<p><code class=\"language-text\">eventManager.off(event, handler)</code></p>\n<ul>\n<li><code class=\"language-text\">event</code> {string|Object} - An event name (String) or map of event names to handlers</li>\n<li><code class=\"language-text\">[handler]</code> {Function} - The function to be called on <code class=\"language-text\">event</code>.</li>\n</ul>\n<h2 id=\"event-objects\"><a href=\"#event-objects\" aria-label=\"event objects permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event objects</h2>\n<p>Event handlers subscribed via <a href=\"#user-content-on\"><code class=\"language-text\">EventManager.on()</code></a> will be called with one parameter. This event parameter always has the following properties:</p>\n<ul>\n<li><code class=\"language-text\">type</code> (string) -  The event type to which the event handler is subscribed, e.g. <code class=\"language-text\">&#39;click&#39;</code> or <code class=\"language-text\">&#39;pointermove&#39;</code></li>\n<li><code class=\"language-text\">center</code> (Object <code class=\"language-text\">{x, y}</code>) - The center of the event location (e.g. the centroid of a touch) relative to the viewport (basically, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX\"><code class=\"language-text\">clientX/Y</code></a>)</li>\n<li><code class=\"language-text\">offsetCenter</code> (Object <code class=\"language-text\">{x, y}</code>) - The center of the event location (e.g. the centroid of a touch)</li>\n<li><code class=\"language-text\">target</code> (Object) - The target of the event, as specified by the original <code class=\"language-text\">srcEvent</code></li>\n<li><code class=\"language-text\">srcEvent</code> (Object) - The original event object dispatched by the browser to the JS runtime</li>\n<li><code class=\"language-text\">preventDefault</code> (Function) - Equivalent to <code class=\"language-text\">srcEvent.preventDefault</code>.</li>\n<li><code class=\"language-text\">stopPropagation</code> (Function) - Do not invoke handlers registered for any ancestors in the DOM tree.</li>\n<li><code class=\"language-text\">stopImmediatePropagation</code> (Function) - Do not invoke any other handlers registered for the same element or its ancestors.</li>\n</ul>\n<p>Additionally, event objects for different event types contain a subset of the following properties:</p>\n<ul>\n<li><code class=\"language-text\">key</code> (number) - The keycode of the keyboard event</li>\n<li><code class=\"language-text\">leftButton</code> (boolean) - Flag indicating whether the left button is involved during the event</li>\n<li><code class=\"language-text\">middleButton</code> (boolean) - Flag indicating whether the middle button is involved during the event</li>\n<li><code class=\"language-text\">rightButton</code> (boolean) - Flag indicating whether the right button is involved during the event</li>\n<li><code class=\"language-text\">pointerType</code> (string) - A string indicating the type of input (e.g. <code class=\"language-text\">&#39;mouse&#39;</code>, <code class=\"language-text\">&#39;touch&#39;</code>, <code class=\"language-text\">&#39;pointer&#39;</code>)</li>\n<li><code class=\"language-text\">delta</code> (number) - The scroll magnitude/distance of a wheel event</li>\n</ul>\n<h2 id=\"supported-events-and-gestures\"><a href=\"#supported-events-and-gestures\" aria-label=\"supported events and gestures permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Supported Events and Gestures</h2>\n<h3 id=\"basic-input-events\"><a href=\"#basic-input-events\" aria-label=\"basic input events permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic input events</h3>\n<p>Keyboard events are fired when focus is on the EventManager's target element or its decendants, unless typing into a text input.</p>\n<ul>\n<li><code class=\"language-text\">&#39;keydown&#39;</code></li>\n<li><code class=\"language-text\">&#39;keyup&#39;</code></li>\n</ul>\n<p>Mouse event and pointer event names are interchangeable.</p>\n<ul>\n<li><code class=\"language-text\">&#39;mousedown&#39;</code> | <code class=\"language-text\">&#39;pointerdown&#39;</code></li>\n<li><code class=\"language-text\">&#39;mousemove&#39;</code> | <code class=\"language-text\">&#39;pointermove&#39;</code></li>\n<li><code class=\"language-text\">&#39;mouseup&#39;</code> | <code class=\"language-text\">&#39;pointerup&#39;</code></li>\n<li><code class=\"language-text\">&#39;mouseover&#39;</code> | <code class=\"language-text\">&#39;pointerover&#39;</code></li>\n<li><code class=\"language-text\">&#39;mouseout&#39;</code> | <code class=\"language-text\">&#39;pointerout&#39;</code></li>\n<li><code class=\"language-text\">&#39;mouseleave&#39;</code> | <code class=\"language-text\">&#39;pointerleave&#39;</code></li>\n<li><code class=\"language-text\">&#39;wheel&#39;</code></li>\n<li><code class=\"language-text\">&#39;contextmenu&#39;</code></li>\n</ul>\n<h3 id=\"gesture-events\"><a href=\"#gesture-events\" aria-label=\"gesture events permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gesture events</h3>\n<p>The following events are generated with <a href=\"http://hammerjs.github.io/\">hammer.js</a>recognizers. You may fine-tune the behavior of these events by supplying <code class=\"language-text\">recognizerOptions</code> to the <code class=\"language-text\">EventManager</code> constructor.</p>\n<ul>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">rotate</code> (<a href=\"https://hammerjs.github.io/recognizer-rotate/\">Hammer.Rotate</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;rotate&#39;</code></li>\n<li><code class=\"language-text\">&#39;rotatestart&#39;</code></li>\n<li><code class=\"language-text\">&#39;rotatemove&#39;</code></li>\n<li><code class=\"language-text\">&#39;rotateend&#39;</code></li>\n<li><code class=\"language-text\">&#39;rotatecancel&#39;</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">pinch</code> (<a href=\"https://hammerjs.github.io/recognizer-pinch/\">Hammer.Pinch</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;pinch&#39;</code></li>\n<li><code class=\"language-text\">&#39;pinchin&#39;</code></li>\n<li><code class=\"language-text\">&#39;pinchout&#39;</code></li>\n<li><code class=\"language-text\">&#39;pinchstart&#39;</code></li>\n<li><code class=\"language-text\">&#39;pinchmove&#39;</code></li>\n<li><code class=\"language-text\">&#39;pinchend&#39;</code></li>\n<li><code class=\"language-text\">&#39;pinchcancel&#39;</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">swipe</code> (<a href=\"https://hammerjs.github.io/recognizer-swipe/\">Hammer.Swipe</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;swipe&#39;</code></li>\n<li><code class=\"language-text\">&#39;swipeleft&#39;</code></li>\n<li><code class=\"language-text\">&#39;swiperight&#39;</code></li>\n<li><code class=\"language-text\">&#39;swipeup&#39;</code></li>\n<li><code class=\"language-text\">&#39;swipedown&#39;</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">pan</code> (<a href=\"https://hammerjs.github.io/recognizer-pan/\">Hammer.Pan</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;pan&#39;</code></li>\n<li><code class=\"language-text\">&#39;panstart&#39;</code></li>\n<li><code class=\"language-text\">&#39;panmove&#39;</code></li>\n<li><code class=\"language-text\">&#39;panup&#39;</code></li>\n<li><code class=\"language-text\">&#39;pandown&#39;</code></li>\n<li><code class=\"language-text\">&#39;panleft&#39;</code></li>\n<li><code class=\"language-text\">&#39;panright&#39;</code></li>\n<li><code class=\"language-text\">&#39;panend&#39;</code></li>\n<li><code class=\"language-text\">&#39;pancancel&#39;</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">Press</code> (<a href=\"https://hammerjs.github.io/recognizer-press/\">Hammer.Pan</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;press&#39;</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">doubletap</code> (<a href=\"https://hammerjs.github.io/recognizer-tap/\">Hammer.Pan</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;doubletap&#39;</code></li>\n<li><code class=\"language-text\">&#39;dblclick&#39;</code> - alias of <code class=\"language-text\">doubletap</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">tap</code> (<a href=\"https://hammerjs.github.io/recognizer-tap/\">Hammer.Pan</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;tap&#39;</code> - a single click. Not fired if double clicking.</li>\n<li><code class=\"language-text\">&#39;click&#39;</code> - alias of <code class=\"language-text\">tap</code></li>\n</ul>\n</li>\n<li>\n<p>The following events are controlled by the <code class=\"language-text\">anytap</code> (<a href=\"https://hammerjs.github.io/recognizer-tap/\">Hammer.Pan</a>) recognizer:</p>\n<ul>\n<li><code class=\"language-text\">&#39;anytap&#39;</code> - like <code class=\"language-text\">click</code>, but fired twice if double clicking.</li>\n<li><code class=\"language-text\">&#39;anyclick&#39;</code> - alias of <code class=\"language-text\">anytap</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"event-handling-shims\"><a href=\"#event-handling-shims\" aria-label=\"event handling shims permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event handling shims</h2>\n<p><code class=\"language-text\">EventManager</code> currently uses Hammer.js for gesture and touch support, but Hammer.js does not support all input event types out of the box. Therefore, <code class=\"language-text\">EventManager</code> employs the following modules to shim the missing functionality:</p>\n<h3 id=\"keyinput\"><a href=\"#keyinput\" aria-label=\"keyinput permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KeyInput</h3>\n<p>Handles keyboard events.</p>\n<h3 id=\"moveinput\"><a href=\"#moveinput\" aria-label=\"moveinput permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MoveInput</h3>\n<p>Handles pointer/touch/mouse move events while no button pressed, and leave events (for when the cursor leaves the DOM element registered with <code class=\"language-text\">EventManager</code>).</p>\n<h3 id=\"wheelinput\"><a href=\"#wheelinput\" aria-label=\"wheelinput permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WheelInput</h3>\n<p>Handles mouse wheel events and trackpad events that emulate mouse wheel events. Note that this module is stateful: it tracks time elapsed between events in order to determine the magnitude/scroll distance of an event.</p>\n<h2 id=\"remarks\"><a href=\"#remarks\" aria-label=\"remarks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remarks</h2>\n<ul>\n<li>\n<p>Current implementation delegates touch and gesture event registration and handling to Hammer.js. Includes shims for handling event not supported by Hammer.js, such as keyboard input, mouse move, and wheel input. This dependency structure may change in the future.</p>\n</li>\n<li>\n<p>Hammer.js unsafely references <code class=\"language-text\">window</code> and <code class=\"language-text\">document</code>, and so will fail in environments without these constructs (e.g. Node). To mitigate this, Hammer.js modules are conditionally <code class=\"language-text\">require()</code>d, and replaced with mocks in non-browser environments.</p>\n</li>\n</ul>","timeToRead":7,"excerpt":"EventManagerProvides a unified API for subscribing to events about both basic input events (e.g. 'mousemove', 'touchstart', 'wheel') and…","frontmatter":{"title":"EventManager","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"../../README.md":"/docs","docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../upgrade-guide.md":"/docs/upgrade-guide","docs/upgrade-guide.md":"/docs/upgrade-guide","../../upgrade-guide":"/docs/upgrade-guide","docs/upgrade-guide":"/docs/upgrade-guide","../../whats-new.md":"/docs/whats-new","docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../../get-started/README.md":"/docs/get-started","docs/get-started/README.md":"/docs/get-started","../../get-started":"/docs/get-started","docs/get-started":"/docs/get-started","../../advanced/pointer-events.md":"/docs/advanced/pointer-events","docs/advanced/pointer-events.md":"/docs/advanced/pointer-events","../../advanced/pointer-events":"/docs/advanced/pointer-events","docs/advanced/pointer-events":"/docs/advanced/pointer-events","../../advanced/integrating.md":"/docs/advanced/integrating","docs/advanced/integrating.md":"/docs/advanced/integrating","../../advanced/integrating":"/docs/advanced/integrating","docs/advanced/integrating":"/docs/advanced/integrating","":"/docs/api-reference/event-manager","docs/api-reference/event-manager.md":"/docs/api-reference/event-manager","docs/api-reference/event-manager":"/docs/api-reference/event-manager"},"slug":"docs/api-reference/event-manager","toc":"docs"}}